/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ShopRouteRouteImport } from './routes/_shop/route'
import { Route as AdminRouteRouteImport } from './routes/_admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ShopShopRouteImport } from './routes/_shop/shop'
import { Route as AdminAdminRouteImport } from './routes/_admin/admin'

const ShopRouteRoute = ShopRouteRouteImport.update({
  id: '/_shop',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopShopRoute = ShopShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => ShopRouteRoute,
} as any)
const AdminAdminRoute = AdminAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AdminRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminAdminRoute
  '/shop': typeof ShopShopRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminAdminRoute
  '/shop': typeof ShopShopRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteRouteWithChildren
  '/_shop': typeof ShopRouteRouteWithChildren
  '/_admin/admin': typeof AdminAdminRoute
  '/_shop/shop': typeof ShopShopRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/shop'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/shop'
  id: '__root__' | '/' | '/_admin' | '/_shop' | '/_admin/admin' | '/_shop/shop'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  ShopRouteRoute: typeof ShopRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_shop': {
      id: '/_shop'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ShopRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_shop/shop': {
      id: '/_shop/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopShopRouteImport
      parentRoute: typeof ShopRouteRoute
    }
    '/_admin/admin': {
      id: '/_admin/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdminRouteRouteChildren {
  AdminAdminRoute: typeof AdminAdminRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAdminRoute: AdminAdminRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ShopRouteRouteChildren {
  ShopShopRoute: typeof ShopShopRoute
}

const ShopRouteRouteChildren: ShopRouteRouteChildren = {
  ShopShopRoute: ShopShopRoute,
}

const ShopRouteRouteWithChildren = ShopRouteRoute._addFileChildren(
  ShopRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  ShopRouteRoute: ShopRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
