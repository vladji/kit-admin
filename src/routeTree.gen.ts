/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AdminAdminRouteRouteImport } from './routes/admin/_admin/route'
import { Route as AdminAdminIndexRouteImport } from './routes/admin/_admin/index'

const AdminRouteImport = createFileRoute('/admin')()

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminAdminRouteRoute = AdminAdminRouteRouteImport.update({
  id: '/_admin',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAdminIndexRoute = AdminAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminAdminRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AdminAdminRouteRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/admin/': typeof AdminAdminIndexRoute
}
export interface FileRoutesByTo {
  '/admin': typeof AdminAdminIndexRoute
  '/auth': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin': typeof AdminRouteWithChildren
  '/admin/_admin': typeof AdminAdminRouteRouteWithChildren
  '/auth/': typeof AuthIndexRoute
  '/admin/_admin/': typeof AdminAdminIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/admin' | '/auth' | '/admin/'
  fileRoutesByTo: FileRoutesByTo
  to: '/admin' | '/auth'
  id: '__root__' | '/admin' | '/admin/_admin' | '/auth/' | '/admin/_admin/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/_admin': {
      id: '/admin/_admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminRouteRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_admin/': {
      id: '/admin/_admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminAdminIndexRouteImport
      parentRoute: typeof AdminAdminRouteRoute
    }
  }
}

interface AdminAdminRouteRouteChildren {
  AdminAdminIndexRoute: typeof AdminAdminIndexRoute
}

const AdminAdminRouteRouteChildren: AdminAdminRouteRouteChildren = {
  AdminAdminIndexRoute: AdminAdminIndexRoute,
}

const AdminAdminRouteRouteWithChildren = AdminAdminRouteRoute._addFileChildren(
  AdminAdminRouteRouteChildren,
)

interface AdminRouteChildren {
  AdminAdminRouteRoute: typeof AdminAdminRouteRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminRouteRoute: AdminAdminRouteRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
